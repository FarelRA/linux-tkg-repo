name: builder dispatcher
on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      os:
        required: true
        type: string

env:
  # Set variables for clarity and maintainability
  archlinux_repo_dir: "archlinux/x86_64"
  fedora_repo_dir: "fedora/x86_64"
  ubuntu_repo_dir: "debian/amd64"
  ubuntu_packages_file: "${{ ubuntu_repo_dir }}/Packages"
  ubuntu_release_file: "${{ ubuntu_repo_dir }}/Release"
  ubuntu_inrelease_file: "${{ ubuntu_repo_dir }}/InRelease"

jobs:
  dispatch-to-fedora:
    if: inputs.os == 'fedora'
    runs-on: ubuntu-latest
    container: fedora:latest
    steps:
      - name: Install dependencies
        run: dnf install git createrepo -y
      - name: Checkount linux-tkg-repo
        uses: actions/checkout@v4
      - name: fix git folder ownership
        run: git config --global --add safe.directory `pwd`
      - name: run git status
        run: git status
      - name: Update package list
        run: createrepo ${{ fedora_repo_dir }}
      - name: Push updated package list
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Push updated package list"
          git push

  dispatch-to-ubuntu:
    if: inputs.os == 'ubuntu'
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: sudo apt-get install -y dpkg-dev gpg
      - name: Checkount linux-tkg-repo
        uses: actions/checkout@v4
      - name: Update package list
        run: |
          # Generate the Packages file
          dpkg-scanpackages "${{ ubuntu_repo_dir }}" /dev/null > "${{ ubuntu_packages_file }}" || {
            echo "Error generating Packages file!" >&2
            exit 1
          }
          gzip -k -f -9 "${{ ubuntu_packages_file }}" || {
            echo "Error compressing Packages file!" >&2
            exit 1
          }
        
          # Generate the Release file
          cat conf/distributions > "${{ ubuntu_release_file }}"  # Optional configuration information
          echo -e "Date: $(LANG=C date -Ru)" >> "${{ ubuntu_release_file }}"
        
          # Calculate and add checksums
          calculate_checksums() {
            local checksum_type="$1"
            local checksum_file="$2"
            local checksum=$("$checksum_type" "$checksum_file" | cut -d' ' -f1)
            local file_size=$(wc -c "$checksum_file" | cut -d' ' -f1)
            printf " %s %16d %s\n" "$checksum" "$file_size" "$checksum_file" >> "${{ ubuntu_release_file }}"
          }
        
          calculate_checksums "md5sum" "${{ ubuntu_packages_file }}.gz"
          calculate_checksums "md5sum" "${{ ubuntu_packages_file }}"
          calculate_checksums "sha256sum" "${{ ubuntu_packages_file }}.gz"
          calculate_checksums "sha256sum" "${{ ubuntu_packages_file }}"
        
          # Clearsign the Release file
          gpg --clearsign --digest-algo SHA512 -o "${{ ubuntu_inrelease_file }}" "${{ ubuntu_release_file }}" || {
            echo "Error signing Release file!" >&2
            exit 1
          }
      - name: Push updated package list
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Push updated package list"
          git push

  dispatch-to-arch:
    if: inputs.os == 'arch'
    runs-on: ubuntu-latest
    container: archlinux:latest
    steps:
      - name: Update mirrorlist
        run: |
          pacman -Sy --noconfirm reflector
          reflector --latest 50 --protocol http,https --sort rate --save /etc/pacman.d/mirrorlist
      - name: Install dependencies
        run: pacman -Syu --noconfirm git
      - name: Checkount linux-tkg
        uses: actions/checkout@v4
      - name: Update package list
        run: repo-add "${{ archlinux_repo_dir }}/linux-tkg.db.tar.gz" "${{ archlinux_repo_dir }}/*.pkg.tar.zst"
      - name: Push updated package list
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Push updated package list"
          git push